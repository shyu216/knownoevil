import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,e as a,o as n}from"./app-CebUhPvD.js";const e={};function t(r,i){return n(),l("div",null,i[0]||(i[0]=[a('<h2 id="prerequisites-1-introduction-to-genomics-基因组学" tabindex="-1"><a class="header-anchor" href="#prerequisites-1-introduction-to-genomics-基因组学"><span>Prerequisites 1. Introduction to Genomics 基因组学</span></a></h2><ul><li>eukaryotes, prokaryotes, viruses <ul><li>真核生物、原核生物、病毒</li><li>water 70%, protein 15%, RNA 6%, DNA 1%</li></ul></li><li>genome 基因组 <ul><li>bacterium, human, plant, virus</li><li>细菌、人类、植物、病毒</li><li>chromosome 染色体</li><li>plasmid 质粒</li><li>mitochondria 线粒体</li><li>chloroplast 叶绿体</li></ul></li><li>ploidy 倍性 <ul><li>2 copies of the same chromosome, one from each parent</li><li>haploid 单倍体</li><li>diploid 二倍体</li><li>polyploid, triploid, tetraploid</li></ul></li><li>molecular biology 分子生物学 <ul><li>DNA, RNA, protein</li><li>nucleotide 核苷酸, amino acid 氨基酸</li><li>gene, genome, transcriptome 转录组, proteome 蛋白质组</li></ul></li><li>DNA: A-T, C-G <ul><li>double helix 双螺旋</li><li>sugar-phosphate backbone 糖磷酸骨架</li><li>5&#39; to 3&#39; direction</li><li>chromosome, gene, exon 外显子, intron 内含子, promoter 启动子, enhancer 增强子, terminator 终止子</li></ul></li><li>protein <ul><li>encoded by gene</li><li>polymer of amino acid monomers 氨基酸单体聚合物</li><li>cellular functions 细胞功能 <ul><li>catalysis 催化</li><li>structure 结构</li><li>signalling 信号</li></ul></li></ul></li><li>amino acid <ul><li>20 types</li><li>3-letter and 1-letter code</li><li>hydrophobic 疏水, hydrophilic 亲水, charged 带电</li></ul></li><li>central dogma <ul><li>DNA -&gt; RNA -&gt; protein</li><li>transcription 转录, translation 翻译</li><li>U (uracil) in RNA instead of T (thymine) in DNA</li><li>ribosome 核糖体, tRNA, mRNA</li></ul></li><li>reserve transcription 逆转录 <ul><li>mRNA -&gt; DNA</li><li>reverse transcriptase 逆转录酶</li><li>retrovirus 逆转录病毒</li></ul></li><li>gene <ul><li>unit of heredity 遗传单位</li><li>2% of human genome codes for genes</li><li>promoter, 5&#39; UTR, coding sequence, 3&#39; UTR, terminator</li><li>coding sequence: exon, intron</li></ul></li><li>variation <ul><li>sequence variation <ul><li>single nucleotide variation (SNV) 单核苷酸变异</li><li>single nucleotide polymorphism (SNP) 单核苷酸多态性</li><li>indels: insertion, deletion</li></ul></li><li>structural variation <ul><li>large-scale (&gt;50bp)</li><li>involving entire sections of DNA</li><li>gain or loss of fucntion (GoF, LoF)</li></ul></li><li>conservation</li></ul></li><li>sequencing technology <ul><li>DNA/RNA extraction -&gt; library preparation -&gt; sequencing -&gt; export fastq files -&gt; QC/analysis</li><li>Illumina, Nanopore</li></ul></li><li>FASTQ files, reads <ul><li>4 lines per read <ul><li>identifier - unique name</li><li>sequence - AGTC</li><li>spacer - +</li><li>quality - confidence score for each DNA base</li></ul></li></ul></li><li>sequencing strategies <ul><li>whole genome sequencing (WGS) <ul><li>all DNA in cells</li></ul></li><li>whole exome sequencing (WES) <ul><li>all exons</li><li>cheap, capture importants</li></ul></li><li>RNA sequencing (RNA-seq) <ul><li>all RNA in cells</li></ul></li><li>scRNA-seq <ul><li>all RNA but idividual cells</li></ul></li><li>Amplicon <ul><li>use PCR target specific region</li></ul></li><li>Pair-end <ul><li>sequence both ends of DNA fragment</li></ul></li></ul></li></ul><h2 id="_1-indexing" tabindex="-1"><a class="header-anchor" href="#_1-indexing"><span>1. Indexing</span></a></h2><ul><li>common classes of algorithms <ul><li>brute force</li><li>divide and conquer</li><li>recursive</li><li>dynamic programming</li><li>greedy</li></ul></li><li>data in bioinformatics <ul><li>FASTA, sequence, genome</li><li>FASTQ, with quality, read</li><li>BAM/SAM, alignment</li><li>Matrix</li><li>VCF, genetic variants</li></ul></li><li>data type <ul><li>primitives: int, float, char</li><li>collections: array, list, set, map</li><li>derived types: class, enum, tuple</li></ul></li><li>data structure <ul><li>arrangement of data in algorithm</li><li>queue, stack, heap, tree, graph</li></ul></li><li>evaluation <ul><li>correctness</li><li>efficiency</li><li>asymptotic complexity 渐近复杂度 (big O notation)</li><li>tractability 可解性 (P, NP, NP-complete)</li></ul></li><li>when complex <ul><li>heuristic</li><li>approximation</li></ul></li><li>indexing <ul><li>pattern matching</li><li>see if something exists</li><li>linear search O(n)</li><li>binary search O(log n)</li><li>hash table O(1)</li></ul></li><li>double hashing (perfect hashing): use another hash function to treat collision</li><li>kmer <ul><li>breaking sequence into smaller pieces</li><li>key of genomic data in indexing</li></ul></li></ul><h2 id="_2-sequence-alignment-and-mapping" tabindex="-1"><a class="header-anchor" href="#_2-sequence-alignment-and-mapping"><span>2. Sequence Alignment and Mapping</span></a></h2><ul><li>why align sequence <ul><li>compare sequence</li><li>assess similarity</li><li>find evolutionary relationships</li><li>identify functionally conserved sequences</li><li>homology 同源性，指不同生物体的基因或蛋白质序列由于共同的祖先而具有相似性，有助于理解生物进化、基因功能和结构 <ul><li>homologs 同源基因</li><li>orthologs 直系 separated by speciation</li><li>paralogs 旁系 separated by duplication</li></ul></li><li>phylogeny 系统发育 infer the evolutionary relationships among sequences</li><li>protein function, find regions of known function, infer function</li><li>conservation, find conserved regions 在不同物种或不同基因组中，某些基因或蛋白质序列在进化过程中保持不变或变化很小的区域，通常这些序列在生物学功能上具有重要性</li><li>data searching</li><li>de novo assembly, reconstruct the original sequence</li><li>read mapping, infer variants</li></ul></li><li>how to align <ul><li>pairwise</li><li>BLAST</li></ul></li><li>Hamming distance <ul><li>for equal length sequences, count the number of different characters</li></ul></li><li>kmer distance <ul><li>for unequal length sequences, count the number of different kmers</li></ul></li><li>Levenshtein distance (pairwise) <ul><li>edit distance</li><li>最小编辑距离，指两个字符串之间，由一个转换成另一个所需的最少编辑操作次数</li><li>count mismatch, insertion, deletion as transformations</li><li>argmin of <ul><li>(i-1, j-1) + (missmatch 1 or match 0)</li><li>(i-1, j) + (gap 1)</li><li>(i, j-1) + (gap 1)</li></ul></li><li>return the bottom-right cell of the matrix</li></ul></li><li>pairwise distance with penalties <ul><li>apply penalties <ul><li>i.e. match 0, mismatch -1, gap -2</li></ul></li><li>return the bottom-right cell of the matrix</li></ul></li><li>Needleman-Wunsch algorithm (global) <ul><li>return the bottom-right cell of the matrix</li></ul></li><li>Smith-Waterman algorithm (local) <ul><li>return the maximum value in the matrix</li></ul></li><li>semi-global alignment <ul><li>clipped by best offset</li><li>Needleman-Wunsch variant <ul><li>start from max cell, end at reaching top row/left column</li></ul></li></ul></li><li>(scoring) substitution matrix 替换矩阵 <ul><li>assign scores to each pair of characters</li><li>why not use fixed scores <ul><li>two types of DNA mutations 两种DNA突变 <ul><li>transition, purine to purine or pyrimidine to pyrimidine, frequently (A↔G, C↔T)</li><li>transversion, purine to pyrimidine or vice versa, less likely (A↔C, A↔T, G↔C, G↔T)</li></ul></li></ul></li><li>it reflect <ul><li>chemical similarity</li><li>observed mutation frequencies</li><li>how proteins sequence evolve</li></ul></li></ul></li><li>Point Accepted Mutation (PAM) matrix <ul><li>the number represents the evolutionary distance between the sequences</li><li>higher numbers denote greater distances</li><li>limitation <ul><li>only for closely related sequences and small dataset</li><li>not consider different rates of evolution</li></ul></li></ul></li><li>BLOcks SUbstitution Matrix (BLOSUM) matrix <ul><li>scores derived from frequencies of substitutions in blocks of ungapped local alignments</li><li>BLOSUM62: 62% identity</li></ul></li><li>gap panalty <ul><li>negative score</li><li>fixed / affine</li></ul></li><li>read mapping <ul><li>seed extension <ul><li>combine indexing and alignment</li><li>process <ol><li>index kmer</li><li>find seed</li><li>extend seed using alignment</li><li>return best</li></ol></li></ul></li><li>seed chain align <ul><li>for long, noisy sequences</li><li>process <ol><li>find seeds</li><li>identify colinear chains</li><li>base-level alignments to fill gaps</li><li>return best</li></ol></li></ul></li></ul></li><li>Basic Local Alignment Search Tool (BLAST) <ul><li>efficient heuristic <ul><li>DNA translated to protein seq for use <ul><li>Amino Acid (AA) sequences more conserved than DNA</li><li>degeneracy / codon wobble</li><li>3rd base in codon: multiple different nucleotides encode same AA</li><li>eliminate unnecessary DNA mismatches</li><li>more useful kmer hits</li></ul></li><li>low-complexity regions removed <ul><li>repetitive DNA</li></ul></li><li>exploit kmer <ul><li>generate &#39;neighbors&#39;</li><li>allow mismatches</li><li>ungapped alignment and pick with threshold</li></ul></li><li>identify nearby hits on same diagonal <ul><li>like seed chain align</li><li>extend region to a high-scoring segment pair (HSP)</li></ul></li></ul></li></ul></li></ul><h2 id="_3-1-comparing-sequences" tabindex="-1"><a class="header-anchor" href="#_3-1-comparing-sequences"><span>3.1. Comparing Sequences</span></a></h2><ul><li>multiple sequence alignment <ul><li>identify similarities between sequences</li><li>find conserved patterns (motifs 模体) in a protein family</li><li>Sum-of-Pairs (SP) score</li><li>dynamic programming</li></ul></li><li>heuristic: progressive alignment <ol><li>construct a matrix</li><li>construct a guide tree</li><li>align sequences</li></ol></li><li>Basic Local Alignment Search Tool (BLAST) <ul><li>one to many query</li></ul><ol><li>split query into words</li><li>find neighbourhood words of similar words</li><li>collect seeds</li><li>extend seeds</li><li>get the best alignment</li></ol></li><li>minhash <ul><li>fingerprint, known as kmers</li><li>big data</li></ul></li><li>Jaccard Coefficient <ul><li>measure the similarity</li><li>proportion</li><li>J(A, B) = |A ∩ B| / |A ∪ B|</li></ul></li><li>minimizers <ul><li>window</li><li>minimizer: select the minimum kmer from a window according to an order</li></ul></li><li>shazam <ul><li>search audio</li><li>audio, fingerprint, hash, reproducible</li></ul></li><li>limitation <ul><li>window size W and kmer size k trade-off</li><li>longer kmer, more informative</li><li>bigger window, more accurate, less efficient</li></ul></li></ul><h2 id="_3-2-graph-theory" tabindex="-1"><a class="header-anchor" href="#_3-2-graph-theory"><span>3.2. Graph Theory</span></a></h2><ul><li>graph, interaction, biology</li><li>describe and analyse relationships</li><li>nodes, edges</li><li>labels, directional, weights</li><li>adjacent, degree</li><li>walk (edge), path (node), cycle (closed path)</li><li>Eulerian path: visit each edge once and only once</li><li>Hamiltonian path: visit each node exactly once, NP-complete</li><li>tree, usually sparse</li><li>clique, edges between all pairs of nodes</li><li>graph, adjacency list, adjacency matrix</li><li>traversals: depth-first search, breadth-first search</li><li>recursion</li></ul><h2 id="_4-1-network-analysis" tabindex="-1"><a class="header-anchor" href="#_4-1-network-analysis"><span>4.1. Network Analysis</span></a></h2><ul><li>connected?</li><li>distance of nodes?</li><li>density?</li><li>diversity of distribution? (node degree distribution)</li><li>centrality <ul><li>degree</li><li>closeness</li><li>betweenness</li><li>eigenvector</li></ul></li><li>classification of networks <ul><li>scale-free</li><li>small-world</li><li>random</li><li>regular</li></ul></li></ul><h2 id="_4-2-advanced-indexing" tabindex="-1"><a class="header-anchor" href="#_4-2-advanced-indexing"><span>4.2. Advanced Indexing</span></a></h2><ul><li>trie (prefix tree or radix tree) <ul><li>used in word other</li></ul></li><li>suffix tree 后缀树 <ul><li>complexity, space</li></ul></li><li>suffix array <ul><li>each item is a word</li></ul></li><li>Burrrows-Wheeler Transform (BWT) <ul><li>popular</li><li>efficient in indexing human genome</li></ul></li></ul><h2 id="_5-evolutionary-trees" tabindex="-1"><a class="header-anchor" href="#_5-evolutionary-trees"><span>5. Evolutionary Trees</span></a></h2><ul><li><p>taxonomy 分类学</p></li><li><p>phylogenetics 系统发育</p></li><li><p>speciation 物种形成</p></li><li><p>multiple sequence alignment</p><ul><li>issue: local not represent global</li></ul></li><li><p>greedy: pair the most similar sequences</p></li><li><p>building a tree</p><ul><li>next merge</li><li>internal node</li><li>branch length</li></ul></li><li><p>UPGMA</p><ul><li>unweighted pair group method with arithmetic mean</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>, n for number of merge, n * n for distance matrix</li><li>distance based</li><li>ultrameric: distance from root to leaf is the same</li></ul></li><li><p>Neighbor joining</p></li><li><p>distance based methods</p><ul><li>pros: simple, flexible, fast, scalable</li><li>cons: sensitive to distance, evolutionary rates not considered, uncertain</li></ul></li><li><p>character based methods</p><ul><li>taxon be described by a number of characters</li></ul></li><li><p>parsimony 解析 methods</p><ul><li>compute a phylogenetic tree T for a set of sequences that minimizes L(T)</li><li>L(T) is the min of subsitutions requires to explain tree T</li></ul></li><li><p>evaluating trees</p><ul><li>label internal nodes e.g. Hamming distance</li></ul></li><li><p>small parsimony</p><ul><li>given T, find L(T)</li></ul></li><li><p>FItch&#39;s algorithm</p><ul><li>repeatly assign labels</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>v</mi></msub><mo>=</mo><mrow><msub><mi>S</mi><mi>u</mi></msub><mo>∪</mo><msub><mi>S</mi><mi>v</mi></msub><mi>i</mi><mi>f</mi><msub><mi>S</mi><mi>u</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>v</mi></msub><mo>=</mo><mi mathvariant="normal">∅</mi><mo separator="true">,</mo><msub><mi>S</mi><mi>u</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>v</mi></msub><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mrow><annotation encoding="application/x-tex">S_v = {S_u \\cup S_v if S_u \\cap S_v = \\emptyset, S_u \\cap S_v otherwise}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∅</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span></span></li></ul></li><li><p>Sankoff&#39;s algorithm</p><ul><li>count smallest number of possible changes needed on a given tree</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>a</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">[</mo><msub><mi>c</mi><mi>i</mi></msub><mi>j</mi><mo>+</mo><msub><mi>S</mi><mi>l</mi></msub><mi>e</mi><mi>f</mi><mi>t</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo><mo>+</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">[</mo><msub><mi>c</mi><mi>i</mi></msub><mi>K</mi><mo>+</mo><msub><mi>S</mi><mi>r</mi></msub><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">S_a(i) = min[c_ij + S_left(j)] + min[c_iK + S_right(k)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)]</span></span></span></span></li></ul></li><li><p>build a tree for character based method</p><ul><li>greedy</li><li>sequential addition</li></ul></li><li><p>bootstrapping 重复抽样</p><ul><li>re‐sample, create new alignment</li></ul></li></ul><h2 id="_6-assembly" tabindex="-1"><a class="header-anchor" href="#_6-assembly"><span>6. Assembly</span></a></h2><ul><li><p>to build contigs 连续序列</p></li><li><p>greedy extension</p><ul><li>for N reads of L length</li><li>O(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mn>3</mn></msup><mo>∗</mo><msup><mi>L</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">N^3 * L^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>)</li></ul></li><li><p>overlap layout consensus (OLC)</p><ul><li>Newbler, Celera, Canu</li></ul></li><li><p>sequencing by hybridisation</p><ul><li>microarray</li></ul></li><li><p>De Bruijn Graphs</p><ul><li>kmer</li><li>Eulerian path</li><li>ACGT -&gt; 0,1,2,3</li><li>4^k nodes</li><li>O(kN) space</li><li>O(N) time</li></ul></li><li><p>considerations</p></li><li><p>OLC simplification</p></li><li><p>De Bruijn graph simplification</p></li><li><p>Kmers, coverage, depth</p></li><li><p>assessing assemblies</p></li><li><p>software</p></li></ul><h2 id="_7-dimensionality-reduction" tabindex="-1"><a class="header-anchor" href="#_7-dimensionality-reduction"><span>7. Dimensionality Reduction</span></a></h2><ul><li>approaches <ul><li>feature selection</li><li>feature extraction</li></ul></li><li>principal component analysis (PCA) <ul><li>linear transformation</li><li>eigenvectors</li><li>eigenvalues</li><li>variance</li><li>covariance</li><li>projection</li><li>dimensionality reduction</li></ul></li><li>multidimensional scaling (MDS) <ul><li>distance matrix</li><li>similarity matrix</li><li>stress</li><li>metric MDS</li><li>non-metric MDS</li></ul></li><li>ISOMAP</li><li>t-SNE</li><li>UMAP</li></ul><h2 id="_8-clustering" tabindex="-1"><a class="header-anchor" href="#_8-clustering"><span>8. Clustering</span></a></h2><ul><li>machine learning</li><li>clustering</li><li>distance metrics</li><li>partitional clustering: k-means</li><li>clustering approaches</li><li>density-based clustering</li><li>divisive clustering</li></ul><h2 id="_9-optimisation" tabindex="-1"><a class="header-anchor" href="#_9-optimisation"><span>9. Optimisation</span></a></h2><ul><li>exploring the solution space <ul><li>constraints</li><li>branch and bound</li></ul></li><li>search heuristics <ul><li>gradient descent</li><li>simulated annealing</li><li>genetic algorithms</li></ul></li><li>optimisation</li></ul><h2 id="_10-supervised-machine-learning" tabindex="-1"><a class="header-anchor" href="#_10-supervised-machine-learning"><span>10. Supervised Machine Learning</span></a></h2><ul><li>unsupervised learning <ul><li>associative rule learning</li></ul></li><li>unsupervised vs supervised ML <ul><li>GeoGuessr</li></ul></li><li>supervised ML <ul><li>KNN</li><li>naive Bayes</li><li>SVM</li><li>decision trees</li><li>ensemble methods</li></ul></li><li>genomics example <ul><li>markov models for gene identification</li></ul></li></ul><h2 id="_11-evaluation" tabindex="-1"><a class="header-anchor" href="#_11-evaluation"><span>11. Evaluation</span></a></h2><ul><li>classification</li><li>regression</li></ul><h2 id="guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence" tabindex="-1"><a class="header-anchor" href="#guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence"><span>Guest Lecture: An introduction to machine learning and artificial intelligence</span></a></h2>',29)]))}const o=s(e,[["render",t]]),c=JSON.parse(`{"path":"/coursework/mscs/COMP90014.html","title":"COMP90014 Algorithms for Bioinformatics","lang":"en-US","frontmatter":{"title":"COMP90014 Algorithms for Bioinformatics","shortTitle":"COMP90014","order":2,"icon":"book-open","category":["UniMelb","Course","24S2"],"tag":["Algorithm","Bioinformatics"],"description":"Prerequisites 1. Introduction to Genomics 基因组学 eukaryotes, prokaryotes, viruses 真核生物、原核生物、病毒 water 70%, protein 15%, RNA 6%, DNA 1% genome 基因组 bacterium, human, plant, virus 细菌、...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"COMP90014 Algorithms for Bioinformatics\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-11T08:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dale\\",\\"url\\":\\"https://github.com/shyu216\\"}]}"],["meta",{"property":"og:url","content":"https://shyu216.github.io/knownoevil/knownoevil/coursework/mscs/COMP90014.html"}],["meta",{"property":"og:site_name","content":"SIHONG's Blog"}],["meta",{"property":"og:title","content":"COMP90014 Algorithms for Bioinformatics"}],["meta",{"property":"og:description","content":"Prerequisites 1. Introduction to Genomics 基因组学 eukaryotes, prokaryotes, viruses 真核生物、原核生物、病毒 water 70%, protein 15%, RNA 6%, DNA 1% genome 基因组 bacterium, human, plant, virus 细菌、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-11T08:45:12.000Z"}],["meta",{"property":"article:tag","content":"Bioinformatics"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:modified_time","content":"2025-05-11T08:45:12.000Z"}]]},"git":{"createdTime":1722491295000,"updatedTime":1746953112000,"contributors":[{"name":"shyu216","username":"shyu216","email":"sihong1@student.unimelb.edu.au","commits":15,"url":"https://github.com/shyu216"}]},"filePathRelative":"coursework/mscs/COMP90014.md","excerpt":"<h2>Prerequisites 1. Introduction to Genomics 基因组学</h2>\\n<ul>\\n<li>eukaryotes, prokaryotes, viruses\\n<ul>\\n<li>真核生物、原核生物、病毒</li>\\n<li>water 70%, protein 15%, RNA 6%, DNA 1%</li>\\n</ul>\\n</li>\\n<li>genome 基因组\\n<ul>\\n<li>bacterium, human, plant, virus</li>\\n<li>细菌、人类、植物、病毒</li>\\n<li>chromosome 染色体</li>\\n<li>plasmid 质粒</li>\\n<li>mitochondria 线粒体</li>\\n<li>chloroplast 叶绿体</li>\\n</ul>\\n</li>\\n<li>ploidy 倍性\\n<ul>\\n<li>2 copies of the same chromosome, one from each parent</li>\\n<li>haploid 单倍体</li>\\n<li>diploid 二倍体</li>\\n<li>polyploid, triploid, tetraploid</li>\\n</ul>\\n</li>\\n<li>molecular biology 分子生物学\\n<ul>\\n<li>DNA, RNA, protein</li>\\n<li>nucleotide 核苷酸, amino acid 氨基酸</li>\\n<li>gene, genome, transcriptome 转录组, proteome 蛋白质组</li>\\n</ul>\\n</li>\\n<li>DNA: A-T, C-G\\n<ul>\\n<li>double helix 双螺旋</li>\\n<li>sugar-phosphate backbone 糖磷酸骨架</li>\\n<li>5' to 3' direction</li>\\n<li>chromosome, gene, exon 外显子, intron 内含子, promoter 启动子, enhancer 增强子, terminator 终止子</li>\\n</ul>\\n</li>\\n<li>protein\\n<ul>\\n<li>encoded by gene</li>\\n<li>polymer of amino acid monomers 氨基酸单体聚合物</li>\\n<li>cellular functions 细胞功能\\n<ul>\\n<li>catalysis 催化</li>\\n<li>structure 结构</li>\\n<li>signalling 信号</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>amino acid\\n<ul>\\n<li>20 types</li>\\n<li>3-letter and 1-letter code</li>\\n<li>hydrophobic 疏水, hydrophilic 亲水, charged 带电</li>\\n</ul>\\n</li>\\n<li>central dogma\\n<ul>\\n<li>DNA -&gt; RNA -&gt; protein</li>\\n<li>transcription 转录, translation 翻译</li>\\n<li>U (uracil) in RNA instead of T (thymine) in DNA</li>\\n<li>ribosome 核糖体, tRNA, mRNA</li>\\n</ul>\\n</li>\\n<li>reserve transcription 逆转录\\n<ul>\\n<li>mRNA -&gt; DNA</li>\\n<li>reverse transcriptase 逆转录酶</li>\\n<li>retrovirus 逆转录病毒</li>\\n</ul>\\n</li>\\n<li>gene\\n<ul>\\n<li>unit of heredity 遗传单位</li>\\n<li>2% of human genome codes for genes</li>\\n<li>promoter, 5' UTR, coding sequence, 3' UTR, terminator</li>\\n<li>coding sequence: exon, intron</li>\\n</ul>\\n</li>\\n<li>variation\\n<ul>\\n<li>sequence variation\\n<ul>\\n<li>single nucleotide variation (SNV) 单核苷酸变异</li>\\n<li>single nucleotide polymorphism (SNP) 单核苷酸多态性</li>\\n<li>indels: insertion, deletion</li>\\n</ul>\\n</li>\\n<li>structural variation\\n<ul>\\n<li>large-scale (&gt;50bp)</li>\\n<li>involving entire sections of DNA</li>\\n<li>gain or loss of fucntion (GoF, LoF)</li>\\n</ul>\\n</li>\\n<li>conservation</li>\\n</ul>\\n</li>\\n<li>sequencing technology\\n<ul>\\n<li>DNA/RNA extraction -&gt; library preparation -&gt; sequencing -&gt; export fastq files -&gt; QC/analysis</li>\\n<li>Illumina, Nanopore</li>\\n</ul>\\n</li>\\n<li>FASTQ files, reads\\n<ul>\\n<li>4 lines per read\\n<ul>\\n<li>identifier - unique name</li>\\n<li>sequence - AGTC</li>\\n<li>spacer - +</li>\\n<li>quality - confidence score for each DNA base</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>sequencing strategies\\n<ul>\\n<li>whole genome sequencing (WGS)\\n<ul>\\n<li>all DNA in cells</li>\\n</ul>\\n</li>\\n<li>whole exome sequencing (WES)\\n<ul>\\n<li>all exons</li>\\n<li>cheap, capture importants</li>\\n</ul>\\n</li>\\n<li>RNA sequencing (RNA-seq)\\n<ul>\\n<li>all RNA in cells</li>\\n</ul>\\n</li>\\n<li>scRNA-seq\\n<ul>\\n<li>all RNA but idividual cells</li>\\n</ul>\\n</li>\\n<li>Amplicon\\n<ul>\\n<li>use PCR target specific region</li>\\n</ul>\\n</li>\\n<li>Pair-end\\n<ul>\\n<li>sequence both ends of DNA fragment</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{o as comp,c as data};
