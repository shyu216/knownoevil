import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,e as i,o}from"./app-XGLXzCad.js";const a={};function l(n,e){return o(),r("div",null,e[0]||(e[0]=[i('<h3 id="does-any-resource-help-with-this-course" tabindex="-1"><a class="header-anchor" href="#does-any-resource-help-with-this-course"><span>Does any resource help with this course?</span></a></h3><ol><li><a href="https://www.cs.princeton.edu/~wayne/kleinberg-tardos/" target="_blank" rel="noopener noreferrer">Algorithm Design by Kleinberg and Tardos</a></li><li><a href="https://jeffe.cs.illinois.edu/teaching/algorithms/book/Algorithms-JeffE.pdf" target="_blank" rel="noopener noreferrer">Algorithms by Jeff Erickson</a></li><li><a href="https://jeffe.cs.illinois.edu/teaching/algorithms/notes/H-lp.pdf" target="_blank" rel="noopener noreferrer">Linear Programming</a></li><li><a href="https://www.designofapproxalgs.com/book.pdf" target="_blank" rel="noopener noreferrer">Design of Approximation Algorithms</a></li></ol><h3 id="what-is-this-course-about" tabindex="-1"><a class="header-anchor" href="#what-is-this-course-about"><span>What is this course about?</span></a></h3><p>This course is an introduction to advanced algorithms and data structures for engineering students. The first part of the course covers advanced data structures, including treap, amortised analysis, quake heap, splay tree, hashing, range tree, and min cut/max flow. The second part of the course covers advanced algorithms, including linear programming, vertex cover, set cover, factor-x approximation, and duality.</p><p>The course covers the following topics:</p><ol><li>Treap</li></ol><ul><li>tree + heap</li></ul><ol start="2"><li>Amortised Analysis</li></ol><ul><li>always have balance</li><li>prepaid</li><li>potential</li></ul><ol start="3"><li>Quake Heap</li></ol><ul><li>x tournament trees</li></ul><ol start="4"><li>Splay Tree</li></ol><ul><li>splay after every operation</li><li>practical somehow</li></ul><ol start="5"><li>Hashing</li></ol><ul><li>usually static/fixed size</li><li>perfect hashing: two-level hashing ensuring no collision</li><li>cuckoo hashing: x hash functions, allowing insertion</li></ul><ol start="6"><li>Range Tree</li></ol><ul><li>multidimensional sort</li></ul><ol start="7"><li>Min Cut/Max Flow</li></ol><ul><li>adjacency list</li><li>union find</li><li>matching</li><li>bipartite graph</li></ul><ol start="8"><li>Linear Programming</li></ol><ul><li>given a set of linear inequalities, find the maximum/minimum value of a linear function</li><li>vertex cover</li><li>set cover</li><li>factor-x approximation</li><li>duality</li></ul>',21)]))}const c=t(a,[["render",l]]),p=JSON.parse(`{"path":"/coursework/mscs/COMP90077.html","title":"COMP90077 Advanced Algorithms and Data Structures","lang":"en-US","frontmatter":{"title":"COMP90077 Advanced Algorithms and Data Structures","shortTitle":"COMP90077","order":1,"icon":"book-open","category":["UniMelb","Course","24S1"],"tag":["Data Structures","Algorithm","Graph Theory"],"description":"Does any resource help with this course? Algorithm Design by Kleinberg and Tardos Algorithms by Jeff Erickson Linear Programming Design of Approximation Algorithms What is this ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"COMP90077 Advanced Algorithms and Data Structures\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-11T08:45:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dale\\",\\"url\\":\\"https://github.com/shyu216\\"}]}"],["meta",{"property":"og:url","content":"https://shyu216.github.io/knownoevil/knownoevil/coursework/mscs/COMP90077.html"}],["meta",{"property":"og:site_name","content":"SIHONG's Blog"}],["meta",{"property":"og:title","content":"COMP90077 Advanced Algorithms and Data Structures"}],["meta",{"property":"og:description","content":"Does any resource help with this course? Algorithm Design by Kleinberg and Tardos Algorithms by Jeff Erickson Linear Programming Design of Approximation Algorithms What is this ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-05-11T08:45:12.000Z"}],["meta",{"property":"article:tag","content":"Graph Theory"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:tag","content":"Data Structures"}],["meta",{"property":"article:modified_time","content":"2025-05-11T08:45:12.000Z"}]]},"git":{"createdTime":1722491295000,"updatedTime":1746953112000,"contributors":[{"name":"shyu216","username":"shyu216","email":"sihong1@student.unimelb.edu.au","commits":8,"url":"https://github.com/shyu216"}]},"filePathRelative":"coursework/mscs/COMP90077.md","excerpt":"<h3>Does any resource help with this course?</h3>\\n<ol>\\n<li><a href=\\"https://www.cs.princeton.edu/~wayne/kleinberg-tardos/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Algorithm Design by Kleinberg and Tardos</a></li>\\n<li><a href=\\"https://jeffe.cs.illinois.edu/teaching/algorithms/book/Algorithms-JeffE.pdf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Algorithms by Jeff Erickson</a></li>\\n<li><a href=\\"https://jeffe.cs.illinois.edu/teaching/algorithms/notes/H-lp.pdf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Linear Programming</a></li>\\n<li><a href=\\"https://www.designofapproxalgs.com/book.pdf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Design of Approximation Algorithms</a></li>\\n</ol>","autoDesc":true}`);export{c as comp,p as data};
