import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,b as l,d as t,a as i,o as a}from"./app-Cb1RROb0.js";const Q={},T=i('<h2 id="prerequisites-1-introduction-to-genomics-基因组学" tabindex="-1"><a class="header-anchor" href="#prerequisites-1-introduction-to-genomics-基因组学"><span>Prerequisites 1. Introduction to Genomics 基因组学</span></a></h2><ul><li>eukaryotes, prokaryotes, viruses <ul><li>真核生物、原核生物、病毒</li><li>water 70%, protein 15%, RNA 6%, DNA 1%</li></ul></li><li>genome 基因组 <ul><li>bacterium, human, plant, virus</li><li>细菌、人类、植物、病毒</li><li>chromosome 染色体</li><li>plasmid 质粒</li><li>mitochondria 线粒体</li><li>chloroplast 叶绿体</li></ul></li><li>ploidy 倍性 <ul><li>2 copies of the same chromosome, one from each parent</li><li>haploid 单倍体</li><li>diploid 二倍体</li><li>polyploid, triploid, tetraploid</li></ul></li><li>molecular biology 分子生物学 <ul><li>DNA, RNA, protein</li><li>nucleotide 核苷酸, amino acid 氨基酸</li><li>gene, genome, transcriptome 转录组, proteome 蛋白质组</li></ul></li><li>DNA: A-T, C-G <ul><li>double helix 双螺旋</li><li>sugar-phosphate backbone 糖磷酸骨架</li><li>5&#39; to 3&#39; direction</li><li>chromosome, gene, exon 外显子, intron 内含子, promoter 启动子, enhancer 增强子, terminator 终止子</li></ul></li><li>protein <ul><li>encoded by gene</li><li>polymer of amino acid monomers 氨基酸单体聚合物</li><li>cellular functions 细胞功能 <ul><li>catalysis 催化</li><li>structure 结构</li><li>signalling 信号</li></ul></li></ul></li><li>amino acid <ul><li>20 types</li><li>3-letter and 1-letter code</li><li>hydrophobic 疏水, hydrophilic 亲水, charged 带电</li></ul></li><li>central dogma <ul><li>DNA -&gt; RNA -&gt; protein</li><li>transcription 转录, translation 翻译</li><li>U (uracil) in RNA instead of T (thymine) in DNA</li><li>ribosome 核糖体, tRNA, mRNA</li></ul></li><li>reserve transcription 逆转录 <ul><li>mRNA -&gt; DNA</li><li>reverse transcriptase 逆转录酶</li><li>retrovirus 逆转录病毒</li></ul></li><li>gene <ul><li>unit of heredity 遗传单位</li><li>2% of human genome codes for genes</li><li>promoter, 5&#39; UTR, coding sequence, 3&#39; UTR, terminator</li><li>coding sequence: exon, intron</li></ul></li><li>variation <ul><li>sequence variation <ul><li>single nucleotide variation (SNV) 单核苷酸变异</li><li>single nucleotide polymorphism (SNP) 单核苷酸多态性</li><li>indels: insertion, deletion</li></ul></li><li>structural variation <ul><li>large-scale (&gt;50bp)</li><li>involving entire sections of DNA</li><li>gain or loss of fucntion (GoF, LoF)</li></ul></li><li>conservation</li></ul></li><li>sequencing technology <ul><li>DNA/RNA extraction -&gt; library preparation -&gt; sequencing -&gt; export fastq files -&gt; QC/analysis</li><li>Illumina, Nanopore</li></ul></li><li>FASTQ files, reads <ul><li>4 lines per read <ul><li>identifier - unique name</li><li>sequence - AGTC</li><li>spacer - +</li><li>quality - confidence score for each DNA base</li></ul></li></ul></li><li>sequencing strategies <ul><li>whole genome sequencing (WGS) <ul><li>all DNA in cells</li></ul></li><li>whole exome sequencing (WES) <ul><li>all exons</li><li>cheap, capture importants</li></ul></li><li>RNA sequencing (RNA-seq) <ul><li>all RNA in cells</li></ul></li><li>scRNA-seq <ul><li>all RNA but idividual cells</li></ul></li><li>Amplicon <ul><li>use PCR target specific region</li></ul></li><li>Pair-end <ul><li>sequence both ends of DNA fragment</li></ul></li></ul></li></ul><h2 id="_1-indexing" tabindex="-1"><a class="header-anchor" href="#_1-indexing"><span>1. Indexing</span></a></h2><ul><li>common classes of algorithms <ul><li>brute force</li><li>divide and conquer</li><li>recursive</li><li>dynamic programming</li><li>greedy</li></ul></li><li>data in bioinformatics <ul><li>FASTA, sequence, genome</li><li>FASTQ, with quality, read</li><li>BAM/SAM, alignment</li><li>Matrix</li><li>VCF, genetic variants</li></ul></li><li>data type <ul><li>primitives: int, float, char</li><li>collections: array, list, set, map</li><li>derived types: class, enum, tuple</li></ul></li><li>data structure <ul><li>arrangement of data in algorithm</li><li>queue, stack, heap, tree, graph</li></ul></li><li>evaluation <ul><li>correctness</li><li>efficiency</li><li>asymptotic complexity 渐近复杂度 (big O notation)</li><li>tractability 可解性 (P, NP, NP-complete)</li></ul></li><li>when complex <ul><li>heuristic</li><li>approximation</li></ul></li><li>indexing <ul><li>pattern matching</li><li>see if something exists</li><li>linear search O(n)</li><li>binary search O(log n)</li><li>hash table O(1)</li></ul></li><li>double hashing (perfect hashing): use another hash function to treat collision</li><li>kmer <ul><li>breaking sequence into smaller pieces</li><li>key of genomic data in indexing</li></ul></li></ul><h2 id="_2-sequence-alignment-and-mapping" tabindex="-1"><a class="header-anchor" href="#_2-sequence-alignment-and-mapping"><span>2. Sequence Alignment and Mapping</span></a></h2><ul><li>why align sequence <ul><li>compare sequence</li><li>assess similarity</li><li>find evolutionary relationships</li><li>identify functionally conserved sequences</li><li>homology 同源性，指不同生物体的基因或蛋白质序列由于共同的祖先而具有相似性，有助于理解生物进化、基因功能和结构 <ul><li>homologs 同源基因</li><li>orthologs 直系 separated by speciation</li><li>paralogs 旁系 separated by duplication</li></ul></li><li>phylogeny 系统发育 infer the evolutionary relationships among sequences</li><li>protein function, find regions of known function, infer function</li><li>conservation, find conserved regions 在不同物种或不同基因组中，某些基因或蛋白质序列在进化过程中保持不变或变化很小的区域，通常这些序列在生物学功能上具有重要性</li><li>data searching</li><li>de novo assembly, reconstruct the original sequence</li><li>read mapping, infer variants</li></ul></li><li>how to align <ul><li>pairwise</li><li>BLAST</li></ul></li><li>Hamming distance <ul><li>for equal length sequences, count the number of different characters</li></ul></li><li>kmer distance <ul><li>for unequal length sequences, count the number of different kmers</li></ul></li><li>Levenshtein distance (pairwise) <ul><li>edit distance</li><li>最小编辑距离，指两个字符串之间，由一个转换成另一个所需的最少编辑操作次数</li><li>count mismatch, insertion, deletion as transformations</li><li>argmin of <ul><li>(i-1, j-1) + (missmatch 1 or match 0)</li><li>(i-1, j) + (gap 1)</li><li>(i, j-1) + (gap 1)</li></ul></li><li>return the bottom-right cell of the matrix</li></ul></li><li>pairwise distance with penalties <ul><li>apply penalties <ul><li>i.e. match 0, mismatch -1, gap -2</li></ul></li><li>return the bottom-right cell of the matrix</li></ul></li><li>Needleman-Wunsch algorithm (global) <ul><li>return the bottom-right cell of the matrix</li></ul></li><li>Smith-Waterman algorithm (local) <ul><li>return the maximum value in the matrix</li></ul></li><li>semi-global alignment <ul><li>clipped by best offset</li><li>Needleman-Wunsch variant <ul><li>start from max cell, end at reaching top row/left column</li></ul></li></ul></li><li>(scoring) substitution matrix 替换矩阵 <ul><li>assign scores to each pair of characters</li><li>why not use fixed scores <ul><li>two types of DNA mutations 两种DNA突变 <ul><li>transition, purine to purine or pyrimidine to pyrimidine, frequently (A↔G, C↔T)</li><li>transversion, purine to pyrimidine or vice versa, less likely (A↔C, A↔T, G↔C, G↔T)</li></ul></li></ul></li><li>it reflect <ul><li>chemical similarity</li><li>observed mutation frequencies</li><li>how proteins sequence evolve</li></ul></li></ul></li><li>Point Accepted Mutation (PAM) matrix <ul><li>the number represents the evolutionary distance between the sequences</li><li>higher numbers denote greater distances</li><li>limitation <ul><li>only for closely related sequences and small dataset</li><li>not consider different rates of evolution</li></ul></li></ul></li><li>BLOcks SUbstitution Matrix (BLOSUM) matrix <ul><li>scores derived from frequencies of substitutions in blocks of ungapped local alignments</li><li>BLOSUM62: 62% identity</li></ul></li><li>gap panalty <ul><li>negative score</li><li>fixed / affine</li></ul></li><li>read mapping <ul><li>seed extension <ul><li>combine indexing and alignment</li><li>process <ol><li>index kmer</li><li>find seed</li><li>extend seed using alignment</li><li>return best</li></ol></li></ul></li><li>seed chain align <ul><li>for long, noisy sequences</li><li>process <ol><li>find seeds</li><li>identify colinear chains</li><li>base-level alignments to fill gaps</li><li>return best</li></ol></li></ul></li></ul></li><li>Basic Local Alignment Search Tool (BLAST) <ul><li>efficient heuristic <ul><li>DNA translated to protein seq for use <ul><li>Amino Acid (AA) sequences more conserved than DNA</li><li>degeneracy / codon wobble</li><li>3rd base in codon: multiple different nucleotides encode same AA</li><li>eliminate unnecessary DNA mismatches</li><li>more useful kmer hits</li></ul></li><li>low-complexity regions removed <ul><li>repetitive DNA</li></ul></li><li>exploit kmer <ul><li>generate &#39;neighbors&#39;</li><li>allow mismatches</li><li>ungapped alignment and pick with threshold</li></ul></li><li>identify nearby hits on same diagonal <ul><li>like seed chain align</li><li>extend region to a high-scoring segment pair (HSP)</li></ul></li></ul></li></ul></li></ul><h2 id="_3-1-comparing-sequences" tabindex="-1"><a class="header-anchor" href="#_3-1-comparing-sequences"><span>3.1. Comparing Sequences</span></a></h2><ul><li>multiple sequence alignment <ul><li>identify similarities between sequences</li><li>find conserved patterns (motifs 模体) in a protein family</li><li>Sum-of-Pairs (SP) score</li><li>dynamic programming</li></ul></li><li>heuristic: progressive alignment <ol><li>construct a matrix</li><li>construct a guide tree</li><li>align sequences</li></ol></li><li>Basic Local Alignment Search Tool (BLAST) <ul><li>one to many query</li></ul><ol><li>split query into words</li><li>find neighbourhood words of similar words</li><li>collect seeds</li><li>extend seeds</li><li>get the best alignment</li></ol></li><li>minhash <ul><li>fingerprint, known as kmers</li><li>big data</li></ul></li><li>Jaccard Coefficient <ul><li>measure the similarity</li><li>proportion</li><li>J(A, B) = |A ∩ B| / |A ∪ B|</li></ul></li><li>minimizers <ul><li>window</li><li>minimizer: select the minimum kmer from a window according to an order</li></ul></li><li>shazam <ul><li>search audio</li><li>audio, fingerprint, hash, reproducible</li></ul></li><li>limitation <ul><li>window size W and kmer size k trade-off</li><li>longer kmer, more informative</li><li>bigger window, more accurate, less efficient</li></ul></li></ul><h2 id="_3-2-graph-theory" tabindex="-1"><a class="header-anchor" href="#_3-2-graph-theory"><span>3.2. Graph Theory</span></a></h2><ul><li>graph, interaction, biology</li><li>describe and analyse relationships</li><li>nodes, edges</li><li>labels, directional, weights</li><li>adjacent, degree</li><li>walk (edge), path (node), cycle (closed path)</li><li>Eulerian path: visit each edge once and only once</li><li>Hamiltonian path: visit each node exactly once, NP-complete</li><li>tree, usually sparse</li><li>clique, edges between all pairs of nodes</li><li>graph, adjacency list, adjacency matrix</li><li>traversals: depth-first search, breadth-first search</li><li>recursion</li></ul><h2 id="_4-1-network-analysis" tabindex="-1"><a class="header-anchor" href="#_4-1-network-analysis"><span>4.1. Network Analysis</span></a></h2><ul><li>connected?</li><li>distance of nodes?</li><li>density?</li><li>diversity of distribution? (node degree distribution)</li><li>centrality <ul><li>degree</li><li>closeness</li><li>betweenness</li><li>eigenvector</li></ul></li><li>classification of networks <ul><li>scale-free</li><li>small-world</li><li>random</li><li>regular</li></ul></li></ul><h2 id="_4-2-advanced-indexing" tabindex="-1"><a class="header-anchor" href="#_4-2-advanced-indexing"><span>4.2. Advanced Indexing</span></a></h2><ul><li>trie (prefix tree or radix tree) <ul><li>used in word other</li></ul></li><li>suffix tree 后缀树 <ul><li>complexity, space</li></ul></li><li>suffix array <ul><li>each item is a word</li></ul></li><li>Burrrows-Wheeler Transform (BWT) <ul><li>popular</li><li>efficient in indexing human genome</li></ul></li></ul><h2 id="_5-evolutionary-trees" tabindex="-1"><a class="header-anchor" href="#_5-evolutionary-trees"><span>5. Evolutionary Trees</span></a></h2>',15),o=i("<li><p>taxonomy 分类学</p></li><li><p>phylogenetics 系统发育</p></li><li><p>speciation 物种形成</p></li><li><p>multiple sequence alignment</p><ul><li>issue: local not represent global</li></ul></li><li><p>greedy: pair the most similar sequences</p></li><li><p>building a tree</p><ul><li>next merge</li><li>internal node</li><li>branch length</li></ul></li>",6),s=l("p",null,"UPGMA",-1),r=l("li",null,"unweighted pair group method with arithmetic mean",-1),m={class:"MathJax",jax:"SVG",style:{position:"relative"}},d={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.832ex",height:"2.451ex",role:"img",focusable:"false",viewBox:"0 -833.2 2577.6 1083.2","aria-hidden":"true"},u=i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(633,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(2188.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1),c=[u],h=l("mjx-assistive-mml",{unselectable:"on",display:"inline"},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[l("mi",null,"O"),l("mo",{stretchy:"false"},"("),l("msup",null,[l("mi",null,"n"),l("mn",null,"3")]),l("mo",{stretchy:"false"},")")])],-1),g=l("li",null,"distance based",-1),p=l("li",null,"ultrameric: distance from root to leaf is the same",-1),f=i("<li><p>Neighbor joining</p></li><li><p>distance based methods</p><ul><li>pros: simple, flexible, fast, scalable</li><li>cons: sensitive to distance, evolutionary rates not considered, uncertain</li></ul></li><li><p>character based methods</p><ul><li>taxon be described by a number of characters</li></ul></li><li><p>parsimony 解析 methods</p><ul><li>compute a phylogenetic tree T for a set of sequences that minimizes L(T)</li><li>L(T) is the min of subsitutions requires to explain tree T</li></ul></li><li><p>evaluating trees</p><ul><li>label internal nodes e.g. Hamming distance</li></ul></li><li><p>small parsimony</p><ul><li>given T, find L(T)</li></ul></li>",6),H=l("p",null,"FItch's algorithm",-1),y=l("li",null,"repeatly assign labels",-1),L={class:"MathJax",jax:"SVG",style:{position:"relative"}},b={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"44.419ex",height:"2.21ex",role:"img",focusable:"false",viewBox:"0 -772 19633.3 977","aria-hidden":"true"},v=i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g><g data-mml-node="mo" transform="translate(1316.7,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2372.5,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1322.7,0)"><path data-c="222A" d="M591 598H592Q604 598 611 583V376Q611 345 611 296Q610 162 606 148Q605 146 605 145Q586 68 507 23T333 -22Q268 -22 209 -1T106 66T56 173Q55 180 55 384L56 585Q66 598 75 598Q85 598 95 585V378L96 172L98 162Q112 95 181 57T332 18Q415 18 487 58T570 175Q571 180 571 383V583Q579 598 591 598Z"></path></g><g data-mml-node="msub" transform="translate(2211.9,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g><g data-mml-node="mi" transform="translate(3250.9,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3595.9,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="msub" transform="translate(4145.9,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(5468.5,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="msub" transform="translate(6357.8,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g><g data-mml-node="mo" transform="translate(7674.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(8730.3,0)"><path data-c="2205" d="M331 696Q335 708 339 722T345 744T350 759T357 769T367 772Q374 772 381 767T388 754Q388 746 377 712L366 673L378 661Q460 575 460 344Q460 281 456 234T432 126T373 27Q319 -22 250 -22Q214 -22 180 -7Q168 -3 168 -4L159 -33Q148 -71 142 -75Q138 -78 132 -78Q124 -78 118 -72T111 -60Q111 -52 122 -18L133 21L125 29Q39 111 39 344Q39 596 137 675Q187 716 251 716Q265 716 278 714T296 710T315 703T331 696ZM276 676Q264 679 246 679Q196 679 159 631Q134 597 128 536T121 356Q121 234 127 174T151 80L234 366Q253 430 275 506T308 618L318 654Q318 656 294 669L276 676ZM181 42Q207 16 250 16Q291 16 324 47Q354 78 366 136T378 356Q378 470 372 528T349 616L348 613Q348 611 264 326L181 42Z"></path></g><g data-mml-node="mo" transform="translate(9230.3,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(9674.9,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(10997.6,0)"><path data-c="2229" d="M88 -21T75 -21T55 -7V200Q55 231 55 280Q56 414 60 428Q61 430 61 431Q77 500 152 549T332 598Q443 598 522 544T610 405Q611 399 611 194V-7Q604 -22 591 -22Q582 -22 572 -9L570 405Q563 433 556 449T529 485Q498 519 445 538T334 558Q251 558 179 518T96 401Q95 396 95 193V-7Q88 -21 75 -21Z"></path></g><g data-mml-node="msub" transform="translate(11886.8,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g></g><g data-mml-node="mi" transform="translate(12925.8,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(13410.8,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mi" transform="translate(13771.8,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(14347.8,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(14813.8,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(15264.8,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mi" transform="translate(15980.8,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(16325.8,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(16794.8,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g></g>',1),M=[v],_=l("mjx-assistive-mml",{unselectable:"on",display:"inline"},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[l("msub",null,[l("mi",null,"S"),l("mi",null,"v")]),l("mo",null,"="),l("mrow",{"data-mjx-texclass":"ORD"},[l("msub",null,[l("mi",null,"S"),l("mi",null,"u")]),l("mo",null,"∪"),l("msub",null,[l("mi",null,"S"),l("mi",null,"v")]),l("mi",null,"i"),l("mi",null,"f"),l("msub",null,[l("mi",null,"S"),l("mi",null,"u")]),l("mo",null,"∩"),l("msub",null,[l("mi",null,"S"),l("mi",null,"v")]),l("mo",null,"="),l("mi",{mathvariant:"normal"},"∅"),l("mo",null,","),l("msub",null,[l("mi",null,"S"),l("mi",null,"u")]),l("mo",null,"∩"),l("msub",null,[l("mi",null,"S"),l("mi",null,"v")]),l("mi",null,"o"),l("mi",null,"t"),l("mi",null,"h"),l("mi",null,"e"),l("mi",null,"r"),l("mi",null,"w"),l("mi",null,"i"),l("mi",null,"s"),l("mi",null,"e")])])],-1),x=l("p",null,"Sankoff's algorithm",-1),A=l("li",null,"count smallest number of possible changes needed on a given tree",-1),Z={class:"MathJax",jax:"SVG",style:{position:"relative"}},w={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"50.497ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 22319.5 1000","aria-hidden":"true"},D=i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g><g data-mml-node="mo" transform="translate(1070.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1459.1,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1804.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2470.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3526.6,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4404.6,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4749.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5349.6,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(5627.6,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(6387.6,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(7021.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(8022,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g><g data-mml-node="mi" transform="translate(8928.7,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(9394.7,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(9944.7,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(10305.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10694.7,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z"></path></g><g data-mml-node="mo" transform="translate(11106.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(11495.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(11996,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(12996.2,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(13874.2,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(14219.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(14819.2,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(15097.2,0)"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(466,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(15857.1,0)"><path data-c="1D43E" d="M285 628Q285 635 228 637Q205 637 198 638T191 647Q191 649 193 661Q199 681 203 682Q205 683 214 683H219Q260 681 355 681Q389 681 418 681T463 682T483 682Q500 682 500 674Q500 669 497 660Q496 658 496 654T495 648T493 644T490 641T486 639T479 638T470 637T456 637Q416 636 405 634T387 623L306 305Q307 305 490 449T678 597Q692 611 692 620Q692 635 667 637Q651 637 651 648Q651 650 654 662T659 677Q662 682 676 682Q680 682 711 681T791 680Q814 680 839 681T869 682Q889 682 889 672Q889 650 881 642Q878 637 862 637Q787 632 726 586Q710 576 656 534T556 455L509 418L518 396Q527 374 546 329T581 244Q656 67 661 61Q663 59 666 57Q680 47 717 46H738Q744 38 744 37T741 19Q737 6 731 0H720Q680 3 625 3Q503 3 488 0H478Q472 6 472 9T474 27Q478 40 480 43T491 46H494Q544 46 544 71Q544 75 517 141T485 216L427 354L359 301L291 248L268 155Q245 63 245 58Q245 51 253 49T303 46H334Q340 37 340 35Q340 19 333 5Q328 0 317 0Q314 0 280 1T180 2Q118 2 85 2T49 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Z"></path></g><g data-mml-node="mo" transform="translate(16968.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(17968.6,0)"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(646,-150) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mi" transform="translate(18983.5,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(19328.5,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(19805.5,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(20381.5,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(20742.5,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(21131.5,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(21652.5,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(22041.5,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g>',1),q=[D],N=l("mjx-assistive-mml",{unselectable:"on",display:"inline"},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[l("msub",null,[l("mi",null,"S"),l("mi",null,"a")]),l("mo",{stretchy:"false"},"("),l("mi",null,"i"),l("mo",{stretchy:"false"},")"),l("mo",null,"="),l("mi",null,"m"),l("mi",null,"i"),l("mi",null,"n"),l("mo",{stretchy:"false"},"["),l("msub",null,[l("mi",null,"c"),l("mi",null,"i")]),l("mi",null,"j"),l("mo",null,"+"),l("msub",null,[l("mi",null,"S"),l("mi",null,"l")]),l("mi",null,"e"),l("mi",null,"f"),l("mi",null,"t"),l("mo",{stretchy:"false"},"("),l("mi",null,"j"),l("mo",{stretchy:"false"},")"),l("mo",{stretchy:"false"},"]"),l("mo",null,"+"),l("mi",null,"m"),l("mi",null,"i"),l("mi",null,"n"),l("mo",{stretchy:"false"},"["),l("msub",null,[l("mi",null,"c"),l("mi",null,"i")]),l("mi",null,"K"),l("mo",null,"+"),l("msub",null,[l("mi",null,"S"),l("mi",null,"r")]),l("mi",null,"i"),l("mi",null,"g"),l("mi",null,"h"),l("mi",null,"t"),l("mo",{stretchy:"false"},"("),l("mi",null,"k"),l("mo",{stretchy:"false"},")"),l("mo",{stretchy:"false"},"]")])],-1),k=l("li",null,[l("p",null,"build a tree for character based method"),l("ul",null,[l("li",null,"greedy"),l("li",null,"sequential addition")])],-1),V=l("li",null,[l("p",null,"bootstrapping 重复抽样"),l("ul",null,[l("li",null,"re‐sample, create new alignment")])],-1),S=l("h2",{id:"_6-assembly",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#_6-assembly"},[l("span",null,"6. Assembly")])],-1),C=l("li",null,[l("p",null,"to build contigs 连续序列")],-1),R=l("p",null,"greedy extension",-1),B=l("li",null,"for N reads of L length",-1),P={class:"MathJax",jax:"SVG",style:{position:"relative"}},G={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"7.785ex",height:"1.887ex",role:"img",focusable:"false",viewBox:"0 -833.9 3440.8 833.9","aria-hidden":"true"},O=i('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(975.3,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1601,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(2323.2,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mn" transform="translate(714,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g>',1),j=[O],E=l("mjx-assistive-mml",{unselectable:"on",display:"inline"},[l("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[l("msup",null,[l("mi",null,"N"),l("mn",null,"3")]),l("mo",null,"∗"),l("msup",null,[l("mi",null,"L"),l("mn",null,"2")])])],-1),U=i("<li><p>overlap layout consensus (OLC)</p><ul><li>Newbler, Celera, Canu</li></ul></li><li><p>sequencing by hybridisation</p><ul><li>microarray</li></ul></li><li><p>De Bruijn Graphs</p><ul><li>kmer</li><li>Eulerian path</li><li>ACGT -&gt; 0,1,2,3</li><li>4^k nodes</li><li>O(kN) space</li><li>O(N) time</li></ul></li><li><p>considerations</p></li><li><p>OLC simplification</p></li><li><p>De Bruijn graph simplification</p></li><li><p>Kmers, coverage, depth</p></li><li><p>assessing assemblies</p></li><li><p>software</p></li>",9),F=i('<h2 id="_7-dimensionality-reduction" tabindex="-1"><a class="header-anchor" href="#_7-dimensionality-reduction"><span>7. Dimensionality Reduction</span></a></h2><ul><li>approaches <ul><li>feature selection</li><li>feature extraction</li></ul></li><li>principal component analysis (PCA) <ul><li>linear transformation</li><li>eigenvectors</li><li>eigenvalues</li><li>variance</li><li>covariance</li><li>projection</li><li>dimensionality reduction</li></ul></li><li>multidimensional scaling (MDS) <ul><li>distance matrix</li><li>similarity matrix</li><li>stress</li><li>metric MDS</li><li>non-metric MDS</li></ul></li><li>ISOMAP</li><li>t-SNE</li><li>UMAP</li></ul><h2 id="_8-clustering" tabindex="-1"><a class="header-anchor" href="#_8-clustering"><span>8. Clustering</span></a></h2><ul><li>machine learning</li><li>clustering</li><li>distance metrics</li><li>partitional clustering: k-means</li><li>clustering approaches</li><li>density-based clustering</li><li>divisive clustering</li></ul><h2 id="_9-optimisation" tabindex="-1"><a class="header-anchor" href="#_9-optimisation"><span>9. Optimisation</span></a></h2><ul><li>exploring the solution space <ul><li>constraints</li><li>branch and bound</li></ul></li><li>search heuristics <ul><li>gradient descent</li><li>simulated annealing</li><li>genetic algorithms</li></ul></li><li>optimisation</li></ul><h2 id="_10-supervised-machine-learning" tabindex="-1"><a class="header-anchor" href="#_10-supervised-machine-learning"><span>10. Supervised Machine Learning</span></a></h2><ul><li>unsupervised learning <ul><li>associative rule learning</li></ul></li><li>unsupervised vs supervised ML <ul><li>GeoGuessr</li></ul></li><li>supervised ML <ul><li>KNN</li><li>naive Bayes</li><li>SVM</li><li>decision trees</li><li>ensemble methods</li></ul></li><li>genomics example <ul><li>markov models for gene identification</li></ul></li></ul><h2 id="_11-evaluation" tabindex="-1"><a class="header-anchor" href="#_11-evaluation"><span>11. Evaluation</span></a></h2><ul><li>classification</li><li>regression</li></ul><h2 id="guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence" tabindex="-1"><a class="header-anchor" href="#guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence"><span>Guest Lecture: An introduction to machine learning and artificial intelligence</span></a></h2>',11);function I(W,z){return a(),e("div",null,[T,l("ul",null,[o,l("li",null,[s,l("ul",null,[r,l("li",null,[l("mjx-container",m,[(a(),e("svg",d,c)),h]),t(", n for number of merge, n * n for distance matrix")]),g,p])]),f,l("li",null,[H,l("ul",null,[y,l("li",null,[l("mjx-container",L,[(a(),e("svg",b,M)),_])])])]),l("li",null,[x,l("ul",null,[A,l("li",null,[l("mjx-container",Z,[(a(),e("svg",w,q)),N])])])]),k,V]),S,l("ul",null,[C,l("li",null,[R,l("ul",null,[B,l("li",null,[t("O("),l("mjx-container",P,[(a(),e("svg",G,j)),E]),t(")")])])]),U]),F])}const X=n(Q,[["render",I],["__file","COMP90014.html.vue"]]),Y=JSON.parse(`{"path":"/master/COMP90014.html","title":"COMP90014 Algorithms for Bioinformatics","lang":"en-US","frontmatter":{"title":"COMP90014 Algorithms for Bioinformatics","shortTitle":"COMP90014","order":2,"icon":"book-open","category":["UniMelb","24S2"],"tag":["Algorithm","Bioinformatics"],"description":"Prerequisites 1. Introduction to Genomics 基因组学 eukaryotes, prokaryotes, viruses 真核生物、原核生物、病毒 water 70%, protein 15%, RNA 6%, DNA 1% genome 基因组 bacterium, human, plant, virus 细菌、...","head":[["meta",{"property":"og:url","content":"https://shyu216.github.io/knownoevil/knownoevil/master/COMP90014.html"}],["meta",{"property":"og:site_name","content":"Know No Evil"}],["meta",{"property":"og:title","content":"COMP90014 Algorithms for Bioinformatics"}],["meta",{"property":"og:description","content":"Prerequisites 1. Introduction to Genomics 基因组学 eukaryotes, prokaryotes, viruses 真核生物、原核生物、病毒 water 70%, protein 15%, RNA 6%, DNA 1% genome 基因组 bacterium, human, plant, virus 细菌、..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-13T23:20:50.000Z"}],["meta",{"property":"article:author","content":"Dale"}],["meta",{"property":"article:tag","content":"Algorithm"}],["meta",{"property":"article:tag","content":"Bioinformatics"}],["meta",{"property":"article:modified_time","content":"2025-02-13T23:20:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"COMP90014 Algorithms for Bioinformatics\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T23:20:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dale\\",\\"url\\":\\"https://github.com/shyu216\\"}]}"]]},"headers":[{"level":2,"title":"Prerequisites 1. Introduction to Genomics 基因组学","slug":"prerequisites-1-introduction-to-genomics-基因组学","link":"#prerequisites-1-introduction-to-genomics-基因组学","children":[]},{"level":2,"title":"1. Indexing","slug":"_1-indexing","link":"#_1-indexing","children":[]},{"level":2,"title":"2. Sequence Alignment and Mapping","slug":"_2-sequence-alignment-and-mapping","link":"#_2-sequence-alignment-and-mapping","children":[]},{"level":2,"title":"3.1. Comparing Sequences","slug":"_3-1-comparing-sequences","link":"#_3-1-comparing-sequences","children":[]},{"level":2,"title":"3.2. Graph Theory","slug":"_3-2-graph-theory","link":"#_3-2-graph-theory","children":[]},{"level":2,"title":"4.1. Network Analysis","slug":"_4-1-network-analysis","link":"#_4-1-network-analysis","children":[]},{"level":2,"title":"4.2. Advanced Indexing","slug":"_4-2-advanced-indexing","link":"#_4-2-advanced-indexing","children":[]},{"level":2,"title":"5. Evolutionary Trees","slug":"_5-evolutionary-trees","link":"#_5-evolutionary-trees","children":[]},{"level":2,"title":"6. Assembly","slug":"_6-assembly","link":"#_6-assembly","children":[]},{"level":2,"title":"7. Dimensionality Reduction","slug":"_7-dimensionality-reduction","link":"#_7-dimensionality-reduction","children":[]},{"level":2,"title":"8. Clustering","slug":"_8-clustering","link":"#_8-clustering","children":[]},{"level":2,"title":"9. Optimisation","slug":"_9-optimisation","link":"#_9-optimisation","children":[]},{"level":2,"title":"10. Supervised Machine Learning","slug":"_10-supervised-machine-learning","link":"#_10-supervised-machine-learning","children":[]},{"level":2,"title":"11. Evaluation","slug":"_11-evaluation","link":"#_11-evaluation","children":[]},{"level":2,"title":"Guest Lecture: An introduction to machine learning and artificial intelligence","slug":"guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence","link":"#guest-lecture-an-introduction-to-machine-learning-and-artificial-intelligence","children":[]}],"git":{"createdTime":1722491295000,"updatedTime":1739488850000,"contributors":[{"name":"shyu216","email":"sihong1@student.unimelb.edu.au","commits":10},{"name":"shyu216","email":"yusihong073@gmail.com","commits":3}]},"filePathRelative":"master/COMP90014.md","localizedDate":"August 1, 2024","excerpt":"<h2>Prerequisites 1. Introduction to Genomics 基因组学</h2>\\n<ul>\\n<li>eukaryotes, prokaryotes, viruses\\n<ul>\\n<li>真核生物、原核生物、病毒</li>\\n<li>water 70%, protein 15%, RNA 6%, DNA 1%</li>\\n</ul>\\n</li>\\n<li>genome 基因组\\n<ul>\\n<li>bacterium, human, plant, virus</li>\\n<li>细菌、人类、植物、病毒</li>\\n<li>chromosome 染色体</li>\\n<li>plasmid 质粒</li>\\n<li>mitochondria 线粒体</li>\\n<li>chloroplast 叶绿体</li>\\n</ul>\\n</li>\\n<li>ploidy 倍性\\n<ul>\\n<li>2 copies of the same chromosome, one from each parent</li>\\n<li>haploid 单倍体</li>\\n<li>diploid 二倍体</li>\\n<li>polyploid, triploid, tetraploid</li>\\n</ul>\\n</li>\\n<li>molecular biology 分子生物学\\n<ul>\\n<li>DNA, RNA, protein</li>\\n<li>nucleotide 核苷酸, amino acid 氨基酸</li>\\n<li>gene, genome, transcriptome 转录组, proteome 蛋白质组</li>\\n</ul>\\n</li>\\n<li>DNA: A-T, C-G\\n<ul>\\n<li>double helix 双螺旋</li>\\n<li>sugar-phosphate backbone 糖磷酸骨架</li>\\n<li>5' to 3' direction</li>\\n<li>chromosome, gene, exon 外显子, intron 内含子, promoter 启动子, enhancer 增强子, terminator 终止子</li>\\n</ul>\\n</li>\\n<li>protein\\n<ul>\\n<li>encoded by gene</li>\\n<li>polymer of amino acid monomers 氨基酸单体聚合物</li>\\n<li>cellular functions 细胞功能\\n<ul>\\n<li>catalysis 催化</li>\\n<li>structure 结构</li>\\n<li>signalling 信号</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>amino acid\\n<ul>\\n<li>20 types</li>\\n<li>3-letter and 1-letter code</li>\\n<li>hydrophobic 疏水, hydrophilic 亲水, charged 带电</li>\\n</ul>\\n</li>\\n<li>central dogma\\n<ul>\\n<li>DNA -&gt; RNA -&gt; protein</li>\\n<li>transcription 转录, translation 翻译</li>\\n<li>U (uracil) in RNA instead of T (thymine) in DNA</li>\\n<li>ribosome 核糖体, tRNA, mRNA</li>\\n</ul>\\n</li>\\n<li>reserve transcription 逆转录\\n<ul>\\n<li>mRNA -&gt; DNA</li>\\n<li>reverse transcriptase 逆转录酶</li>\\n<li>retrovirus 逆转录病毒</li>\\n</ul>\\n</li>\\n<li>gene\\n<ul>\\n<li>unit of heredity 遗传单位</li>\\n<li>2% of human genome codes for genes</li>\\n<li>promoter, 5' UTR, coding sequence, 3' UTR, terminator</li>\\n<li>coding sequence: exon, intron</li>\\n</ul>\\n</li>\\n<li>variation\\n<ul>\\n<li>sequence variation\\n<ul>\\n<li>single nucleotide variation (SNV) 单核苷酸变异</li>\\n<li>single nucleotide polymorphism (SNP) 单核苷酸多态性</li>\\n<li>indels: insertion, deletion</li>\\n</ul>\\n</li>\\n<li>structural variation\\n<ul>\\n<li>large-scale (&gt;50bp)</li>\\n<li>involving entire sections of DNA</li>\\n<li>gain or loss of fucntion (GoF, LoF)</li>\\n</ul>\\n</li>\\n<li>conservation</li>\\n</ul>\\n</li>\\n<li>sequencing technology\\n<ul>\\n<li>DNA/RNA extraction -&gt; library preparation -&gt; sequencing -&gt; export fastq files -&gt; QC/analysis</li>\\n<li>Illumina, Nanopore</li>\\n</ul>\\n</li>\\n<li>FASTQ files, reads\\n<ul>\\n<li>4 lines per read\\n<ul>\\n<li>identifier - unique name</li>\\n<li>sequence - AGTC</li>\\n<li>spacer - +</li>\\n<li>quality - confidence score for each DNA base</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>sequencing strategies\\n<ul>\\n<li>whole genome sequencing (WGS)\\n<ul>\\n<li>all DNA in cells</li>\\n</ul>\\n</li>\\n<li>whole exome sequencing (WES)\\n<ul>\\n<li>all exons</li>\\n<li>cheap, capture importants</li>\\n</ul>\\n</li>\\n<li>RNA sequencing (RNA-seq)\\n<ul>\\n<li>all RNA in cells</li>\\n</ul>\\n</li>\\n<li>scRNA-seq\\n<ul>\\n<li>all RNA but idividual cells</li>\\n</ul>\\n</li>\\n<li>Amplicon\\n<ul>\\n<li>use PCR target specific region</li>\\n</ul>\\n</li>\\n<li>Pair-end\\n<ul>\\n<li>sequence both ends of DNA fragment</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{X as comp,Y as data};
