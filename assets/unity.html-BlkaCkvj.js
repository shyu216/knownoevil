import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as o,o as n}from"./app-BEyZCQGi.js";const i={};function d(s,e){return n(),a("div",null,e[0]||(e[0]=[o('<h3 id="how-to-add-package" tabindex="-1"><a class="header-anchor" href="#how-to-add-package"><span>How to add package?</span></a></h3><p>Normally just add the package and it can be compiled to target platform. But some packages like <code>Emgu.CV</code> uses native runtime dependencies on windows, so may not work when building files for android.</p><p>If some package does not exist in <code>Unity Package Manager</code>, can use <code>NuGet</code> to install it, such as <code>Math.NET</code>.</p><h3 id="how-to-link-something-to-a-script" tabindex="-1"><a class="header-anchor" href="#how-to-link-something-to-a-script"><span>How to link something to a script?</span></a></h3><p>Add this script into the <code>Inspector</code> of a game object, and then drag something into the script&#39;s field. Be careful that it may overwrite the statement in the script.</p><p>You may then create an instance of other <code>MonoBehaviour</code> scripts, and set such things to this instance. But the game logic will not be executed, because the instance is not attached to any game object in the scene.</p><h3 id="what-is-a-monobehaviour" tabindex="-1"><a class="header-anchor" href="#what-is-a-monobehaviour"><span>What is a MonoBehaviour?</span></a></h3><p>Implement game logic, using <code>Awake()</code>, <code>Start()</code>, <code>Update()</code>, <code>FixedUpdate()</code>, <code>OnDestroy()</code>, etc.</p><h3 id="how-to-draw-curve" tabindex="-1"><a class="header-anchor" href="#how-to-draw-curve"><span>How to draw curve?</span></a></h3><p>Use particle system to emit particles, and modify the emitter&#39;s position over time. And suggested to use custom estimating space.</p><h3 id="how-to-use-gpu" tabindex="-1"><a class="header-anchor" href="#how-to-use-gpu"><span>How to use GPU?</span></a></h3><p>The compute shader. And pass the image by <code>RenderTexture</code> and other data by <code>ComputeBuffer</code>. Remember to double check the data type, and thread group size.</p><p>Better to <code>new</code> them in the <code>Start()</code> method, and <code>Release()</code> them in the <code>OnDestroy()</code> method. Frequently <code>new</code> in the <code>Update()</code> method may cause memory leak.</p><h4 id="how-to-write-a-compute-shader" tabindex="-1"><a class="header-anchor" href="#how-to-write-a-compute-shader"><span>How to write a compute shader?</span></a></h4><ul><li><a href="https://blog.csdn.net/dby73/article/details/103206805" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/dby73/article/details/103206805</a></li></ul><p>GPU is single instruction multiple thread (SIMT) architecture, so the compute shader is written in a way that each thread can run independently. For example, use ternary operator <code>?:</code> to handle different cases, instead of using <code>if-else</code> statements.</p><h3 id="what-is-a-texture" tabindex="-1"><a class="header-anchor" href="#what-is-a-texture"><span>What is a texture?</span></a></h3><p>A texture is a 2D image that can be applied to a 3D model or used in a shader. Normally it stores the RGB and alpha values of each pixel in floating point from 0 to 1.</p>',18)]))}const p=t(i,[["render",d]]),h=JSON.parse(`{"path":"/dev/unity.html","title":"Unity","lang":"en-US","frontmatter":{"title":"Unity","icon":"mug-hot","description":"How to add package? Normally just add the package and it can be compiled to target platform. But some packages like Emgu.CV uses native runtime dependencies on windows, so may n...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Unity\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T01:48:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dale\\",\\"url\\":\\"https://github.com/shyu216\\"}]}"],["meta",{"property":"og:url","content":"https://shyu216.github.io/knownoevil/knownoevil/dev/unity.html"}],["meta",{"property":"og:site_name","content":"SIHONG's Blog"}],["meta",{"property":"og:title","content":"Unity"}],["meta",{"property":"og:description","content":"How to add package? Normally just add the package and it can be compiled to target platform. But some packages like Emgu.CV uses native runtime dependencies on windows, so may n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-07T01:48:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T01:48:06.000Z"}]]},"git":{"createdTime":1750383171000,"updatedTime":1751852886000,"contributors":[{"name":"shyu216","username":"shyu216","email":"yusihong073@gmail.com","commits":2,"url":"https://github.com/shyu216"}]},"filePathRelative":"dev/unity.md","excerpt":"<h3>How to add package?</h3>\\n<p>Normally just add the package and it can be compiled to target platform. But some packages like <code>Emgu.CV</code> uses native runtime dependencies on windows, so may not work when building files for android.</p>\\n<p>If some package does not exist in <code>Unity Package Manager</code>, can use <code>NuGet</code> to install it, such as <code>Math.NET</code>.</p>","autoDesc":true}`);export{p as comp,h as data};
